<div class="cart-section">
  <hr>
  <div class="cart-section_breadcrumb">
    <div class="breadcrumb-item">
      <a class="breadcrumb-item_links" href="/">Home</a>
    </div>
    <div class="breadcrumb-item">
      <i class="fa-solid fa-angle-right"></i>
    </div>
    <div class="breadcrumb-item">
      <p>Your Shopping Cart</p>
    </div>
  </div>

  <div class="cart-section_table">
    {% if cart.empty? %}
      <h2 class="cart-section_shopping">Shopping Cart</h2>
      <p class="cart-section_desc">Your cart is currently empty.</p>
      <p class="cart-section_continue">
        Continue browsing <a class="cart-section_collection" href="/collections/all">here</a>
      </p>
    {% else %}
      {% form 'cart', cart %}
        <table class="cart-table">
          <thead class="cart-header">
            <tr>
              <th class="text-center">{{ 'Cart.product' | t }}</th>
              <th class="text-center"></th>
              <th class="text-right">{{ 'Cart.price' | t }}</th>
              <th class="text-right">{{ 'Cart.quantity' | t }}</th>
              <th class="text-right">{{ 'Cart.total' | t }}</th>
            </tr>
          </thead>
          <tbody>
            {% for item in cart.items %}
              <tr class="cart-item">
                <td class="cart-item__image">
                  <div class="cart-item__image-img">
                    <img src="{{ item.image | img_url: width: 200 }}">
                  </div>
                  <div class="cart-item__image-desc">
                    <h3 class="cart-item__title">{{ item.product.title | link_to: item.url }}</h3>
                    {% if item.options_with_values %}
                      <dl>
                        {% for option in item.options_with_values %}
                          <span class="product-option">
                            <span class="option-name">{{ option.name }}</span>
                            <span class="option-value">{{ option.value }}</span>
                          </span>
                          {% if forloop.last == false -%}
                            <span class="option-separator"> / </span>
                          {%- endif %}
                        {% endfor %}
                      </dl>
                    {% endif %}
                    {{ 'Remove' | link_to: item.url_to_remove, class: 'cart-item__remove' }}
                  </div>
                </td>
                <td class="cart-item__info" data-label=""></td>
                <td class="cart-item__price  text-right" data-label="{{ 'Cart.price' | t }}">
                  <span>{{ item.final_price | money_without_trailing_zeros }}</span>
                </td>
                <td class="cart-item__quantity" data-label="{{ 'Cart.quantity' | t }}">
                  <div class="quantity-container">
                    {% comment %}
                      <button class="quantity__button no-js-hidden" name="minus" type="button" {% if item.quantity == 1 %} disabled='disabled' {% endif %}>
                        <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-minus" fill="none" viewBox="0 0 10 2">
                          <path fill-rule="evenodd" clip-rule="evenodd" d="M.5 1C.5.7.7.5 1 .5h8a.5.5 0 110 1H1A.5.5 0 01.5 1z" fill="currentColor"></path>
                        </svg>
                      </button>
                    {% endcomment %}
                    <input class="quantity__input" name="updates[]" value="{{ item.quantity }}" type="number" min="1">
                    <input type="hidden" name="line-item-key" value="{{ item.key }}">
                    {% comment %}
                      <button class="quantity__button no-js-hidden" name="plus" type="button">
                        <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-plus" fill="none" viewBox="0 0 10 10">
                          <path fill-rule="evenodd" clip-rule="evenodd" d="M1 4.51a.5.5 0 000 1h3.5l.01 3.5a.5.5 0 001-.01V5.5l3.5-.01a.5.5 0 00-.01-1H5.5L5.49.99a.5.5 0 00-1 .01v3.5l-3.5.01H1z" fill="currentColor"></path>
                        </svg>
                      </button>
                    {% endcomment %}
                    <div class="item--error"></div>
                  </div>
                </td>

                <td class="cart-item__totals right  text-right small-hide" data-label="{{ 'Cart.total' | t }}">
                  <div class="hidden">
                    <svg
                      class="spinner"
                      style="animation: rotator 1.4s linear infinite;"
                      viewBox="0 0 66 66"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <circle class="path" fill="none" stroke="#000" stroke-width="6" cx="33" cy="33" r="30"></circle>
                    </svg>
                  </div>
                  <div class="cart-item__price">
                    <span class="price price--end">{{ item.final_line_price | money_without_trailing_zeros }}</span>
                  </div>
                </td>
              </tr>
            {% endfor %}
          </tbody>
        </table>

        <div class="cart-footer">
          <div class="cart-item_text">
            <label for="CartSpecialInstructions">Special instructions for seller </label>
            <textarea name="note" id="CartSpecialInstructions"> </textarea>
          </div>
          <div class="cart-item__content">
            <div class="totals" bis_skin_checked="1">
              <h3 class="totals__total">{{ 'Cart.subtotal' | t }}</h3>
              <span class="totals__total-value">{{ cart.total_price | money_without_trailing_zeros }}</span>
            </div>
            <p class="cart__policies">Taxes and <a href="#" class="text-link">shipping</a> calculated at checkout</p>
            <div class="cart_update">
              <button class="cart_update-icon" type="submit" name="update">
                <svg
                  aria-hidden="true"
                  focusable="false"
                  role="presentation"
                  class="icon icon-update"
                  viewBox="0 0 25 25"
                >
                  <path d="M22.339 1.386a1.606 1.606 0 0 0-1.743 1.458l-.077.875A12.124 12.124 0 0 0 12.211.456C5.478.456 0 5.933 0 12.666s5.478 12.212 12.211 12.212c4.653 0 8.84-2.587 10.923-6.748a1.606 1.606 0 1 0-2.872-1.438 8.959 8.959 0 0 1-8.051 4.973c-4.962 0-8.999-4.035-8.999-8.998 0-4.961 4.037-8.999 8.999-8.999a8.93 8.93 0 0 1 6.172 2.452l-1.292-.115a1.604 1.604 0 0 0-1.741 1.458 1.605 1.605 0 0 0 1.457 1.742l4.799.426a1.601 1.601 0 0 0 1.742-1.458l.448-5.045a1.607 1.607 0 0 0-1.457-1.742z"></path>
                </svg>
              </button>
              <a href="/collections/all" class="continue-shopping">{{ 'Cart.continue_shopping' | t }}</a>
            </div>
            <div class="cart-footer_checkout">
              <button class="cart-checkout" type="submit" name="checkout">Check out</button>
            </div>
          </div>
        </div>
      {% endform %}
    {% endif %}
  </div>
</div>

<script>
  const lineItemKeys = document.querySelectorAll('input[name="line-item-key"]')

  const minus = document.querySelectorAll('button[name="minus"]')

  const quantitys = document.querySelectorAll('.quantity__input')

  const finalPrices = document.querySelectorAll('.price--end')

  const cartItemEl = document.querySelectorAll('#cart_form .cart-item')

  const quantityEl = document.querySelectorAll('input[name="updates[]"]')

  const errorEl = document.querySelectorAll('.cart-item__quantity .item--error')

  // format the price
  const formatMoney = number => number.toLocaleString('en-US', {
      style: 'currency',
      currency: 'USD',
      minimumFractionDigits: 0,
      maximumFractionDigits: 0
  })

  async function updateCart(updates, index){
      const res = await fetch(window.Shopify.routes.root + 'cart/change.js', {
          method: 'POST',
          headers: {
              'Content-Type': 'application/json'
          },
          body: JSON.stringify(updates)
      })
      .then(response => {
          return response.json();
      })
      .catch((error) => {
          return error;
      });

      if(res.token){
          // update quantity of minicart
          document.getElementById("CartCount").innerHTML = res.item_count

          if(res.item_count == 0){
              document.querySelector('.cart-section').innerHTML = "{{"Cart.empty_text" | t }}"

              return
          }

          if(updates.quantity == 0){
              cartItemEl[index].remove()
          }else{
              itemProduct = res.items[index]

              // update line price
              finalPrices[index].innerHTML = formatMoney(itemProduct.final_line_price / 100)

              // update quantity
              quantitys[index].value = updates.quantity

              //disable minus button if quantity = 1, enable minus button if quantity > 1
              if(updates.quantity == 1){
                  minus[index].setAttribute('disabled', 'disabled')
              }else{
                  minus[index].removeAttribute('disabled', 'disabled')
              }
          }

          // update subtotal
          totalEl = document.querySelector('.totals__total-value')

          totalEl.innerHTML = formatMoney(res.items_subtotal_price / 100)
      }else{
          errorEl[index].innerHTML = res.message

          setTimeout(() => {
              errorEl[index].innerHTML = ''
          }, 5000)
      }
  }


  document.querySelectorAll('button[name="plus"]').forEach((button, index) => {
      button.addEventListener('click', () => {
          const input = quantityEl[index]

          const updates = {
              'id': lineItemKeys[index].value,
              'quantity': +(input.value) + 1
          }

          updateCart(updates, index)
      })
  })

  document.querySelectorAll('button[name="minus"]').forEach((button, index) => {
      button.addEventListener('click', () => {
          const input = quantityEl[index]

          if(+(input.value) >= 2){
              const updates = {
                  'id': lineItemKeys[index].value,
                  'quantity': +(input.value) - 1
              }

              updateCart(updates, index)
          }
      })
  })

  document.querySelectorAll('.cart-item__remove').forEach((el, index) => {
      el.addEventListener('click', (event) => {
          event.preventDefault();
          const updates = {
              'id': lineItemKeys[index].value,
              'quantity': 0
          }
          updateCart(updates, index)
      })
  })

  document.addEventListener('DOMContentLoaded', function() {
    const cartForm = document.getElementById('cart_form');
    const noteTextarea = document.getElementById('CartSpecialInstructions');
    console.log(noteTextarea)
    cartForm.addEventListener('submit', function(event) {
      event.preventDefault();

      const note = noteTextarea.value;
      fetch('/cart/update.js', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json'
        },
        body: JSON.stringify({
          note: note
        })
      })
      .then(response => response.json())
      .then(data => {
        console.log('Cart updated with note:', data);
        window.location.reload();
      })
      .catch(error => {
        console.error('Error updating cart with note:', error);
      });
    });
  });
</script>

<link
  href="//zenon3.myshopify.com/cdn/shop/t/52/assets/component-loading-spinner.css?v=116724955567955766481705405254"
  rel="stylesheet"
  type="text/css"
  media="all"
>
<style>
            .loading__spinner .path {
              stroke: #000;
            }

            .hidden {
              display: none;
            }
            .cart-section_breadcrumb {
              display: flex;
              align-items: center;
              font-size: 20px;
            }
            .breadcrumb-item_links {
              text-decoration: none !important;
              color: #000 !important;
            }
            .breadcrumb-item_links:hover {
              color: #666 !important;
            }
            .cart-table {
              width: 100%;
              border-collapse: collapse;
            }

            .cart-table thead {
              display: none;
            }
            .text-center{
              text-align: start;
            }
            .text-right{
            text-align: right;
          }

            .cart-table tbody {
              display: block;
            }

            .cart-table tr {
              display: flex;
              flex-direction: column;
              margin-bottom: 15px;
            }

            .cart-table td {
              display: block;
              padding: 20px 0;
            }

            .cart-table td:last-child {
              border-bottom: 0;
            }

            .cart-item__image img {
              width: 200px;
              height: auto;
            }

            .cart-item__info h3 {
              font-size: 16px;
              margin: 0 0 10px;
            }

            .cart-item__remove {
            color: #3c4049;
              font-size: 16px;
              text-decoration: none;
            }
            .cart-item__remove:hover{
                color: #666;
            }

            .product-option dt {
              font-weight: bold;
            }

            .product-option dd {
              margin-left: 10px;
            }

            .quantity-container {
              display: flex;
              align-items: center;
            }

            .quantity__button {
              background: none;
              border-radius: 3px;
              padding: 5px;
              cursor: pointer;
            }

            .quantity__button:disabled {
              cursor: not-allowed;
              opacity: 0.5;
            }

            .quantity__button svg {
              width: 12px;
              height: 12px;
            }

            .quantity__input {
              width: 50px;
              text-align: center;
              margin: 0px;
              border-radius: 3px;
            }

            .item--error {
              color: red;
              font-size: 12px;
              margin-top: 5px;
            }

            .cart-item__totals .cart-item__price span {
              font-size: 16px;
            }

           .cart-footer {
              display: flex;
              justify-content: space-between;
              margin-top: 20px;
            }

            .cart-footer .totals h3 {
              font-size: 18px;
              margin: 0;
            }

            .cart-footer .totals__total-value {
              font-size: 18px;
              font-weight: bold;
            }
            .cart-footer .cart-checkout {
              background:  #c13121;
              color: #fff;
              padding: 10px 20px;
              border: none;
              cursor: pointer;
              float: right;
              text-transform: uppercase;
            }

            /* Mobile view */
            @media (max-width: 767px) {
              .quantity__input{
                border: none;
                outline: none;
                padding: 12px 0px;
              }
              .option-name {
                  display: none;
                }
              .cart-table thead {
                display: none; /* hide headers on mobile */
              }

              .cart-table tr {
                display: flex;
                flex-direction: column;
                margin-bottom: 15px;
              }

              .cart-table td[data-label]::before {
                content: attr(data-label);
                font-weight: bold;
                display: block;
                margin-bottom: 5px;
              }

              .cart-item__image img {
                width: 100%;
                height: auto;
              }
              {% comment %} mobile cart {% endcomment %}
              .cart-section_breadcrumb{
                justify-content: center;

            }
              .cart-item__image{
                flex-direction: column;

            }
            .cart-item__image-desc {
                margin-left: 0;
                text-align: center;
            }
            .text-right {
                text-align: left;
            }
            .cart-item__price, .cart-item__quantity, .cart-item__totals {
                display: flex !important;
    align-items: center !important;
    justify-content: space-between !important;
            }
            .cart-footer{
                flex-direction: column;
            }
            #CartSpecialInstructions{
                width: 100%;
            }
            .totals{
                display: flex;
                align-items: center;
                justify-content: center;
            }
            .cart-footer .totals h3 {
                font-size: 18px;
                margin: 0 15px;
            }
            .cart__policies{
                text-align: center;
            }
            .cart_update{
                display: flex;
                align-items: center;
                justify-content: center;
                margin-bottom: 15px;
            }
            .cart-footer_checkout{
                display: flex;
                align-items: center;
                justify-content: center;
            }
            }

            /* Desktop view */
            @media (min-width: 768px) {
              .option-name {
                  display: none; /* Ẩn option.name trên desktop */
                }
                .option-value{
                    font-size: 17px;
                }
              .cart-table thead {
                display: table-header-group;
              }

              .cart-table tbody {
                display: table-row-group;
              }

              .cart-table tr {
                display: table-row;
                margin-bottom: 0;
                font-size: 20px;
              }

              .cart-table td {
                display: table-cell;
              }

              .cart-item__image,
              .cart-item__info,
              .cart-item__price,
              .cart-item__quantity,
              .cart-item__totals {
                padding: 10px;
              }

              .quantity-container {
                justify-content: right;
              }

              .quantity__input {
                width: 30px;
                margin: 0 5px;
                outline: none;
                 border: none;
                 padding: 10px;
              }

              .cart-item__totals .cart-item__price span {
                font-size: 20px;
              }

              .cart-footer {
                flex-direction: row;
              }
              .cart_update{
                display: flex;
                align-items: center;
                justify-content: end;
                margin-bottom: 15px;
            }
              .cart-footer .totals {
                display: flex;
                justify-content: end;
              }

              .cart-footer .totals h3 {
                margin-bottom: 5px;
                font-size: 20px;
                font-weight: 300;
              }
              .cart__policies{
                font-size: 20px;
                font-style: italic;
            }
            .text-link{
                color: #c13121;
                text-decoration: none;
                border-bottom: 1px solid;
            }

              .cart-footer .totals__total-value {
                margin-left: 6px;
                font-weight: 300;
                font-size: 20px;
              }
            }
            {% comment %} cart_item-item {% endcomment %}
             .cart-item__image{
              display: flex !important;
          }
             .cart-item__title{
              margin: 0;
          }
          .cart-item__image-desc{
              margin-left: 20px;
          }
          .cart-item__title a{
              text-decoration: none;
              font-size: 19px;
              color: #c13121;
          }
          .cart-item_text{
            display: flex;
            flex-direction: column;
        }
        #CartSpecialInstructions{
          width: 400px;
          height: 200px;
          outline: none;
          border: none;
          margin: 15px 0;
      }
      .cart_update-icon{
        padding: 10px;
        color: #c13121;
        border: 2px solid #c13121;
        cursor: pointer;
        background: #fafafa;
    }
    .icon{
      fill: currentColor;
    }
    .icon-update{
      width: 18px;
      height: 18px;
      display: flex;

    }
    .continue-shopping{
        padding: 10px;
        border: 2px solid #c13121;
        margin-left: 24px;
        text-decoration: none;
        color: #c13121;
        text-transform: uppercase;
    }
    .icon-update{
      color: #c13121;
  }
  .cart-section_shopping{
    margin: 0;
    font-size: 27px;
    font-weight: 300;
  }
  .cart-section_desc,.cart-section_continue{
    font-size: 20px;
  }
  .cart-section_collection{
    text-decoration: none;
    color: #c13121;
  }
  .cart-section_collection:hover{
    color: #666;
  }
</style>

{% schema %}
{
  "name": "Cart",
  "settings": []
}
{% endschema %}
